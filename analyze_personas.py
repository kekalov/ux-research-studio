"""
Analyze Personas - –∞–Ω–∞–ª–∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –æ—Ç—á–µ—Ç–µ
"""

import json
from pathlib import Path

def analyze_personas():
    """–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –æ—Ç—á–µ—Ç–µ"""
    
    print("üë• –ê–ù–ê–õ–ò–ó –ü–ï–†–°–û–ù–ê–ñ–ï–ô –í –û–¢–ß–ï–¢–ï")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç
    reports_dir = Path('reports')
    json_files = list(reports_dir.glob('ux_report_enhanced_demo_*.json'))
    
    if not json_files:
        print("‚ùå –û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    latest_file = max(json_files, key=lambda x: x.stat().st_mtime)
    print(f"üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: {latest_file.name}")
    
    with open(latest_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    user_feedback = data.get('user_feedback', {})
    
    print(f"\nüìä –ö–û–õ–ò–ß–ï–°–¢–í–û –ü–ï–†–°–û–ù–ê–ñ–ï–ô: {len(user_feedback)}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    for persona_key, feedback in user_feedback.items():
        persona = feedback.get('persona', {})
        rating = feedback.get('rating', 0)
        impression = feedback.get('impression', '')
        
        print(f"\nüë§ –ü–ï–†–°–û–ù–ê–ñ: {persona.get('name', persona_key)}")
        print(f"   –û—Ü–µ–Ω–∫–∞: {rating}/10")
        print(f"   –¶–µ–ª–∏: {', '.join(persona.get('goals', []))}")
        print(f"   –ë–æ–ª–µ–≤—ã–µ —Ç–æ—á–∫–∏: {', '.join(persona.get('pain_points', []))}")
        print(f"   –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ: {impression[:100]}...")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫
    print(f"\nüìà –°–†–ê–í–ù–ï–ù–ò–ï –û–¶–ï–ù–û–ö:")
    ratings = []
    for persona_key, feedback in user_feedback.items():
        persona = feedback.get('persona', {})
        rating = feedback.get('rating', 0)
        ratings.append((persona.get('name', persona_key), rating))
        print(f"   {persona.get('name', persona_key)}: {rating}/10")
    
    # –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞
    if ratings:
        avg_rating = sum(r[1] for r in ratings) / len(ratings)
        print(f"   –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {avg_rating:.1f}/10")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–∏–π
    print(f"\nüîç –ê–ù–ê–õ–ò–ó –†–ê–ó–õ–ò–ß–ò–ô –ú–ï–ñ–î–£ –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò:")
    
    if len(ratings) > 1:
        min_rating = min(ratings, key=lambda x: x[1])
        max_rating = max(ratings, key=lambda x: x[1])
        
        print(f"   –°–∞–º—ã–π —Å—Ç—Ä–æ–≥–∏–π: {min_rating[0]} ({min_rating[1]}/10)")
        print(f"   –°–∞–º—ã–π –ª–æ—è–ª—å–Ω—ã–π: {max_rating[0]} ({max_rating[1]}/10)")
        print(f"   –†–∞–∑–±—Ä–æ—Å –æ—Ü–µ–Ω–æ–∫: {max_rating[1] - min_rating[1]} –±–∞–ª–ª–æ–≤")
    
    return user_feedback

def explain_persona_differences():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏"""
    
    print(f"\nüí° –ü–û–ß–ï–ú–£ –†–ê–ó–ù–´–ï –ü–ï–†–°–û–ù–ê–ñ–ò –î–ê–Æ–¢ –†–ê–ó–ù–´–ï –û–¶–ï–ù–ö–ò:")
    print("=" * 60)
    
    personas = {
        'business_traveler': {
            'name': '–ê–ª–µ–∫—Å–µ–π, 35 –ª–µ—Ç, –±–∏–∑–Ω–µ—Å-–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫',
            'priorities': ['–°–∫–æ—Ä–æ—Å—Ç—å', '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å'],
            'tolerance': '–ù–∏–∑–∫–∞—è –∫ –º–µ–¥–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ',
            'typical_rating': '6-8/10'
        },
        'family_traveler': {
            'name': '–ú–∞—Ä–∏—è, 42 –≥–æ–¥–∞, –º–∞–º–∞ –¥–≤–æ–∏—Ö –¥–µ—Ç–µ–π',
            'priorities': ['–£–¥–æ–±—Å—Ç–≤–æ', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç—å'],
            'tolerance': '–°—Ä–µ–¥–Ω—è—è –∫ —Å–ª–æ–∂–Ω–æ—Å—Ç—è–º',
            'typical_rating': '5-7/10'
        },
        'budget_traveler': {
            'name': '–î–º–∏—Ç—Ä–∏–π, 28 –ª–µ—Ç, –±—é–¥–∂–µ—Ç–Ω—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫',
            'priorities': ['–¶–µ–Ω–∞', '–ü—Ä–æ—Å—Ç–æ—Ç–∞', '–ë—ã—Å—Ç—Ä–æ—Ç–∞'],
            'tolerance': '–í—ã—Å–æ–∫–∞—è –∫ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞–º',
            'typical_rating': '4-6/10'
        }
    }
    
    for key, persona in personas.items():
        print(f"\nüë§ {persona['name']}:")
        print(f"   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã: {', '.join(persona['priorities'])}")
        print(f"   –¢–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å: {persona['tolerance']}")
        print(f"   –¢–∏–ø–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: {persona['typical_rating']}")

def calculate_persona_impact():
    """–†–∞—Å—á–µ—Ç –≤–ª–∏—è–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
    
    print(f"\nüìä –í–õ–ò–Ø–ù–ò–ï –ö–û–õ–ò–ß–ï–°–¢–í–ê –ü–ï–†–°–û–ù–ê–ñ–ï–ô:")
    print("=" * 50)
    
    scenarios = {
        '1_persona': {
            'description': '1 –ø–µ—Ä—Å–æ–Ω–∞–∂ (–±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç)',
            'time': '30 —Å–µ–∫',
            'cost': '$0.01',
            'coverage': '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è'
        },
        '3_personas': {
            'description': '3 –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–±–∞–ª–∞–Ω—Å)',
            'time': '1-2 –º–∏–Ω',
            'cost': '$0.03',
            'coverage': '–•–æ—Ä–æ—à–∞—è'
        },
        '5_personas': {
            'description': '5+ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑)',
            'time': '3-5 –º–∏–Ω',
            'cost': '$0.05',
            'coverage': '–û—Ç–ª–∏—á–Ω–∞—è'
        }
    }
    
    for scenario, data in scenarios.items():
        print(f"\nüìã {data['description'].upper()}:")
        print(f"   –í—Ä–µ–º—è: {data['time']}")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {data['cost']}")
        print(f"   –ü–æ–∫—Ä—ã—Ç–∏–µ: {data['coverage']}")

if __name__ == "__main__":
    user_feedback = analyze_personas()
    explain_persona_differences()
    calculate_persona_impact()
    
    print(f"\nüéâ –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"üí° {len(user_feedback)} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã")
    print(f"üí° –ö–∞–∂–¥—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑–Ω—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é")
    print(f"üí° –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –±–æ–ª–µ–µ –ø–æ–ª–Ω—ã–º –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º")


