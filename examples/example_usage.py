#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI UX Research Agent –¥–ª—è Ostrovok.ru
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from agent.ux_agent import UXResearchAgent
from config.settings import load_config

def main():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI –∞–≥–µ–Ω—Ç–∞"""
    
    print("üöÄ AI UX Research Agent –¥–ª—è Ostrovok.ru")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = load_config()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è OpenAI API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   AI –∞–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –±–∞–∑–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏")
        print("   –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export OPENAI_API_KEY='your-api-key-here'")
        print()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞
    with UXResearchAgent(config, headless=False) as agent:
        
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:")
        print("1. sochi_winter - –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –≤ –°–æ—á–∏ –Ω–∞ –∑–∏–º–Ω–∏–π —Å–µ–∑–æ–Ω")
        print("2. andorra - –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –≤ –ê–Ω–¥–æ—Ä—Ä–µ")
        print("3. full_analysis - –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π")
        print()
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –°–æ—á–∏
        print("üè® –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è: –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –≤ –°–æ—á–∏")
        print("-" * 40)
        
        try:
            results = agent.run_scenario('sochi_winter')
            
            print(f"‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            print(f"   - –í—Å–µ–≥–æ —à–∞–≥–æ–≤: {len(results.get('steps', []))}")
            print(f"   - –£—Å–ø–µ—à–Ω—ã—Ö —à–∞–≥–æ–≤: {len([s for s in results.get('steps', []) if s.get('success', False)])}")
            
            # –í—ã–≤–æ–¥ –¥–µ—Ç–∞–ª–µ–π –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
            for i, step in enumerate(results.get('steps', []), 1):
                status = "‚úÖ" if step.get('success', False) else "‚ùå"
                print(f"   {i}. {status} {step.get('action', 'Unknown')} ({step.get('duration', 0):.2f}—Å)")
                if step.get('error'):
                    print(f"      –û—à–∏–±–∫–∞: {step['error']}")
            
            # –í—ã–≤–æ–¥ AI –∞–Ω–∞–ª–∏–∑–∞
            ai_analysis = results.get('analysis', {})
            if ai_analysis:
                print(f"\nü§ñ AI –ê–Ω–∞–ª–∏–∑:")
                print(f"   - –û–±—â–∏–π –±–∞–ª–ª: {ai_analysis.get('overall_score', 'N/A')}/10")
                print(f"   - –†–µ–∑—é–º–µ: {ai_analysis.get('summary', 'N/A')}")
                
                # –í—ã–≤–æ–¥ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                recommendations = ai_analysis.get('recommendations', [])
                if recommendations:
                    print(f"   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                    for rec in recommendations[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                        print(f"     ‚Ä¢ {rec.get('description', 'N/A')}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è: {e}")
        
        print("\n" + "=" * 50)
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –ê–Ω–¥–æ—Ä—Ä—ã
        print("üèîÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è: –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –≤ –ê–Ω–¥–æ—Ä—Ä–µ")
        print("-" * 40)
        
        try:
            results = agent.run_scenario('andorra')
            
            print(f"‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            print(f"   - –í—Å–µ–≥–æ —à–∞–≥–æ–≤: {len(results.get('steps', []))}")
            print(f"   - –£—Å–ø–µ—à–Ω—ã—Ö —à–∞–≥–æ–≤: {len([s for s in results.get('steps', []) if s.get('success', False)])}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è: {e}")
    
    print("\nüéâ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìÅ –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ 'reports/'")

if __name__ == "__main__":
    main()


