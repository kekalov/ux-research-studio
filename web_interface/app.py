from flask import Flask, render_template, request, jsonify, send_file
# from flask_cors import CORS  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è Render
import json
import os
import sys
from pathlib import Path
import threading
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

# from agent.ux_agent import UXResearchAgent  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è Render
from config.settings import load_config
from config.advanced_scenarios import get_advanced_scenarios, get_enhanced_search_prompt
# from reports.report_generator import ReportGenerator  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è Render

app = Flask(__name__, template_folder='templates')
# CORS(app)  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è Render

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
active_research = {}

class ResearchManager:
    def __init__(self):
        self.research_id = None
        self.agent = None
        self.progress = 0
        self.status = "idle"
        self.results = {}
        self.messages = []
        
    def start_research(self, scenario_data):
        """–ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        self.research_id = f"research_{int(time.time())}"
        self.status = "running"
        self.progress = 0
        self.messages = []
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        thread = threading.Thread(target=self._run_research, args=(scenario_data,))
        thread.daemon = True
        thread.start()
        
        return self.research_id
    
    def _run_research(self, scenario_data):
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
        try:
            # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è Render)
            # config = load_config()
            # self.agent = UXResearchAgent(config, headless=True)
            print("ü§ñ AI Agent temporarily disabled for Render deployment")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ
            self.add_message("ü§ñ AI Agent", "–ù–∞—á–∏–Ω–∞—é –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...", "info")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
            scenario_name = scenario_data.get('scenario_name', 'custom')
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
            custom_scenario = {
                'name': scenario_data.get('name', '–ö–∞—Å—Ç–æ–º–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ'),
                'destination': scenario_data.get('destination', '–°–æ—á–∏'),
                'check_in': scenario_data.get('check_in', '2024-12-20'),
                'check_out': scenario_data.get('check_out', '2024-12-27'),
                'guests': scenario_data.get('guests', 2),
                'rooms': scenario_data.get('rooms', 1),
                'requirements': {
                    'stars': scenario_data.get('stars', '–õ—é–±—ã–µ'),
                    'distance_to_lift': scenario_data.get('distance_to_lift', '–õ—é–±–æ–µ'),
                    'cancellation': scenario_data.get('cancellation', '–õ—é–±–∞—è'),
                    'price_limit': scenario_data.get('price_limit', '–õ—é–±–∞—è'),
                    'ski_storage': scenario_data.get('ski_storage', False),
                    'transfer_to_lift': scenario_data.get('transfer_to_lift', False)
                }
            }
            
            self.add_message("üéØ –°—Ü–µ–Ω–∞—Ä–∏–π", f"–ó–∞–ø—É—Å–∫–∞—é: {custom_scenario['name']}", "info")
            
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤
            steps = [
                ("–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞", "–û—Ç–∫—Ä—ã–≤–∞—é —Å–∞–π—Ç ostrovok.ru..."),
                ("–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π", "–ò—â—É –æ—Ç–µ–ª–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏..."),
                ("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤", "–ü—Ä–∏–º–µ–Ω—è—é —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º..."),
                ("–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏..."),
                ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª–µ–π", "–ü—Ä–æ–≤–µ—Ä—è—é –¥–µ—Ç–∞–ª–∏ –∏ —É—Å–ª—É–≥–∏..."),
                ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞", "–°–æ–∑–¥–∞—é –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç...")
            ]
            
            for i, (step_name, step_desc) in enumerate(steps):
                self.progress = (i + 1) * 100 // len(steps)
                self.add_message("üîÑ –®–∞–≥", f"{i+1}/{len(steps)}: {step_name}", "progress")
                self.add_message("üí≠ –î–µ–π—Å—Ç–≤–∏–µ", step_desc, "action")
                time.sleep(2)  # –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            self.results = self._generate_sample_results(custom_scenario)
            
            self.add_message("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!", "success")
            self.status = "completed"
            self.progress = 100
            
        except Exception as e:
            self.add_message("‚ùå –û—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", "error")
            self.status = "error"
    
    def _generate_sample_results(self, scenario):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ–ª–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º"""
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        enhanced_analysis = {
            'executive_summary': {
                'overall_score': 7.4,
                'key_findings': [
                    '–ù–∞–π–¥–µ–Ω–æ 8 –æ—Ç–µ–ª–µ–π –∏–∑ 156, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤—Å–µ–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º (5.1%)',
                    '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏: 4 –º–∏–Ω 23 —Å–µ–∫',
                    '–£—Ä–æ–≤–µ–Ω—å —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 7.4/10'
                ],
                'critical_issues': [
                    '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ "–ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ" —Å–Ω–∏–∂–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 23%',
                    '–ù–µ—Ç–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞–º–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –Ω–∞ 40%'
                ]
            },
            'detailed_analysis': {
                'search_functionality': {
                    'score': 7.2,
                    'strengths': [
                        '–ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (1.2 —Å–µ–∫)',
                        '–£–¥–æ–±–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–±–æ—Ä–∞ –¥–∞—Ç',
                        '–•–æ—Ä–æ—à–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∑–≤–µ–∑–¥–∞–º'
                    ],
                    'weaknesses': [
                        '–ù–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –¥–æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞',
                        '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â—É',
                        '–°–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ'
                    ],
                    'recommendations': [
                        '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞"',
                        '–°–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–µ —É—Å–ª—É–≥–∏"',
                        '–£–ª—É—á—à–∏—Ç—å –∫–∞—Ä—Ç—É —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏ –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤'
                    ]
                },
                'user_interface': {
                    'score': 6.8,
                    'strengths': [
                        '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è',
                        '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
                        '–ß–µ—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç–µ–ª—è—Ö'
                    ],
                    'weaknesses': [
                        '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–ª–∏–∫–æ–≤ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤',
                        '–ù–µ–æ—á–µ–≤–∏–¥–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç–º–µ–Ω–∞"',
                        '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫'
                    ],
                    'recommendations': [
                        '–£–ø—Ä–æ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤',
                        '–í—ã–¥–µ–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Ç–º–µ–Ω–æ–π',
                        '–î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ç–æ—Ä–∏–∞–ª –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
                    ]
                },
                'content_quality': {
                    'score': 8.1,
                    'strengths': [
                        '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π',
                        '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
                        '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
                    ],
                    'weaknesses': [
                        '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö',
                        '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –¥–æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤',
                        '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—á–µ—Å—Ç–≤–µ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞'
                    ],
                    'recommendations': [
                        '–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–¥–µ–ª "–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–µ —É—Å–ª—É–≥–∏"',
                        '–£–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤',
                        '–í–∫–ª—é—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –æ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ'
                    ]
                }
            },
            'competitive_analysis': {
                'booking_com': {
                    'score': 8.1,
                    'advantages': [
                        '–õ—É—á—à–∏–π —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –¥–æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞',
                        '–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö',
                        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–∞—Ä—Ç–∞–º–∏ –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤'
                    ]
                },
                'hotels_com': {
                    'score': 6.9,
                    'advantages': [
                        '–ë–æ–ª–µ–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã',
                        '–ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'
                    ]
                }
            },
            'business_impact': {
                'conversion_optimization': [
                    '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞: +23% –∫ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
                    '–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã: +15% –∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–∞–π—Ç–µ',
                    '–í—ã–¥–µ–ª–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Ç–º–µ–Ω—ã: +18% –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º'
                ],
                'user_experience': [
                    '–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∏—Å–∫–∞ –Ω–∞ 40%',
                    '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ 25%',
                    '–°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –Ω–∞ 30%'
                ]
            }
        }
        
        return {
            'scenario': scenario,
            'summary': {
                'total_hotels': 156,
                'matching_hotels': 8,
                'success_rate': 89,
                'total_time': '4 –º–∏–Ω 23 —Å–µ–∫',
                'overall_rating': 7.4,
                'search_steps': 6,
                'filters_applied': 4,
                'hotels_viewed': 23
            },
            'metrics': {
                'usability': 7.2,
                'speed': 6.8,
                'features': 8.1,
                'overall': 7.4,
                'search_efficiency': 6.9,
                'filter_effectiveness': 5.8,
                'content_relevance': 7.6
            },
            'problems': [
                {'issue': '–°–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ', 'rating': 3, 'impact': '–í—ã—Å–æ–∫–∏–π', 'frequency': '–ß–∞—Å—Ç–æ'},
                {'issue': '–§–∏–ª—å—Ç—Ä —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –Ω–µ—Ç–æ—á–Ω—ã–π', 'rating': 5, 'impact': '–°—Ä–µ–¥–Ω–∏–π', 'frequency': '–ò–Ω–æ–≥–¥–∞'},
                {'issue': '–¶–µ–Ω—ã –Ω–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã', 'rating': 6, 'impact': '–°—Ä–µ–¥–Ω–∏–π', 'frequency': '–†–µ–¥–∫–æ'},
                {'issue': '–°–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –æ—Ç–º–µ–Ω—É', 'rating': 4, 'impact': '–í—ã—Å–æ–∫–∏–π', 'frequency': '–ß–∞—Å—Ç–æ'},
                {'issue': '–ö–∞—Ä—Ç–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—ä–µ–º–Ω–∏–∫–∏', 'rating': 3, 'impact': '–í—ã—Å–æ–∫–∏–π', 'frequency': '–í—Å–µ–≥–¥–∞'}
            ],
            'recommendations': [
                {'priority': '–í—ã—Å–æ–∫–∏–π', 'effort': '–ù–∏–∑–∫–∏–π', 'impact': '–í—ã—Å–æ–∫–∏–π', 'recommendation': '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä "–ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ"'},
                {'priority': '–í—ã—Å–æ–∫–∏–π', 'effort': '–°—Ä–µ–¥–Ω–∏–π', 'impact': '–í—ã—Å–æ–∫–∏–π', 'recommendation': '–£–ª—É—á—à–∏—Ç—å –∫–∞—Ä—Ç—É —Å –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞–º–∏'},
                {'priority': '–°—Ä–µ–¥–Ω–∏–π', 'effort': '–ù–∏–∑–∫–∏–π', 'impact': '–°—Ä–µ–¥–Ω–∏–π', 'recommendation': '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ü–µ–Ω'},
                {'priority': '–°—Ä–µ–¥–Ω–∏–π', 'effort': '–ù–∏–∑–∫–∏–π', 'impact': '–°—Ä–µ–¥–Ω–∏–π', 'recommendation': '–í—ã–¥–µ–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Ç–º–µ–Ω–æ–π'},
                {'priority': '–ù–∏–∑–∫–∏–π', 'effort': '–í—ã—Å–æ–∫–∏–π', 'impact': '–ù–∏–∑–∫–∏–π', 'recommendation': '–î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ç–æ—Ä–∏–∞–ª –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'}
            ],
            'personas_feedback': {
                'business_traveler': {
                    'rating': 7.8, 
                    'comment': '–£–¥–æ–±–Ω–æ –¥–ª—è –¥–µ–ª–æ–≤—ã—Ö –ø–æ–µ–∑–¥–æ–∫, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ',
                    'pain_points': ['–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ', '–°–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –æ—Ç–µ–ª–∏ —Å –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª–∞–º–∏'],
                    'suggestions': ['–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä", "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª"']
                },
                'family_traveler': {
                    'rating': 6.9, 
                    'comment': '–•–æ—Ä–æ—à–æ –¥–ª—è —Å–µ–º–µ–π, –Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ—Ç—Å–∫–∏—Ö —É—Å–ª—É–≥–∞—Ö',
                    'pain_points': ['–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ—Ç—Å–∫–∏—Ö –∫–ª—É–±–∞—Ö', '–°–ª–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–µ–º–µ–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞'],
                    'suggestions': ['–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä "–î–µ—Ç—Å–∫–∏–µ —É—Å–ª—É–≥–∏", "–°–µ–º–µ–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞"']
                },
                'budget_traveler': {
                    'rating': 7.1, 
                    'comment': '–ü—Ä–∏–µ–º–ª–µ–º—ã–µ —Ü–µ–Ω—ã, –Ω–æ —Å–∫—Ä—ã—Ç—ã–µ –¥–æ–ø–ª–∞—Ç—ã —Ä–∞–∑–¥—Ä–∞–∂–∞—é—Ç',
                    'pain_points': ['–°–∫—Ä—ã—Ç—ã–µ –¥–æ–ø–ª–∞—Ç—ã', '–ù–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –±—é–¥–∂–µ—Ç—É'],
                    'suggestions': ['–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ä–∞–∑—É', '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä "–ë—é–¥–∂–µ—Ç"']
                },
                'ski_enthusiast': {
                    'rating': 5.2,
                    'comment': '–î–ª—è –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω–∏–∫–æ–≤ —Å–∞–π—Ç –Ω–µ—É–¥–æ–±–µ–Ω - –Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤',
                    'pain_points': ['–ù–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ª—ã–∂–µ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞', '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞—Ö'],
                    'suggestions': ['–°–æ–∑–¥–∞—Ç—å —Ä–∞–∑–¥–µ–ª "–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–µ —É—Å–ª—É–≥–∏"', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤']
                }
            },
            'enhanced_analysis': enhanced_analysis,
            'timeline': [
                {'step': '–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞', 'duration': 2.3, 'status': 'success'},
                {'step': '–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π', 'duration': 45.2, 'status': 'success'},
                {'step': '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤', 'duration': 67.8, 'status': 'partial'},
                {'step': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤', 'duration': 89.1, 'status': 'success'},
                {'step': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª–µ–π', 'duration': 34.5, 'status': 'success'},
                {'step': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞', 'duration': 12.1, 'status': 'success'}
            ]
        }
    
    def add_message(self, sender, message, message_type="info"):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç"""
        self.messages.append({
            'id': len(self.messages),
            'sender': sender,
            'message': message,
            'type': message_type,
            'timestamp': datetime.now().strftime('%H:%M:%S')
        })
    
    def get_status(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞"""
        return {
            'research_id': self.research_id,
            'status': self.status,
            'progress': self.progress,
            'messages': self.messages,
            'results': self.results if self.status == "completed" else None
        }

# –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
research_manager = ResearchManager()

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    # –í—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º HTML –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è Render
    html_content = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UX Research Studio - AI Agent –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            transition: transform 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
        }
        
        .card h2 {
            color: #667eea;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #555;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        
        .status-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
        }
        
        .status-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .status-indicator {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .status-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #ccc;
        }
        
        .status-dot.running {
            background: #4CAF50;
            animation: pulse 2s infinite;
        }
        
        .status-dot.completed {
            background: #2196F3;
        }
        
        .status-dot.error {
            background: #f44336;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        
        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e1e5e9;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 20px;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: width 0.3s ease;
            width: 0%;
        }
        
        .chat-container {
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            padding: 15px;
            background: #f8f9fa;
        }
        
        .message {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 8px;
            background: white;
            border-left: 4px solid #667eea;
        }
        
        .message.user {
            border-left-color: #4CAF50;
        }
        
        .message.agent {
            border-left-color: #2196F3;
        }
        
        .message.warning {
            border-left-color: #ff9800;
        }
        
        .message.error {
            border-left-color: #f44336;
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
            font-size: 0.9rem;
            color: #666;
        }
        
        .message-content {
            color: #333;
        }
        
        .results-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .result-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }
        
        .result-card h4 {
            color: #667eea;
            margin-bottom: 10px;
        }
        
        .rating {
            display: flex;
            align-items: center;
            gap: 5px;
            margin-bottom: 10px;
        }
        
        .star {
            color: #ffd700;
            font-size: 18px;
        }
        
        .hidden {
            display: none;
        }
        
        .alert {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .alert.info {
            background: #e3f2fd;
            border: 1px solid #2196F3;
            color: #0d47a1;
        }
        
        .alert.warning {
            background: #fff3e0;
            border: 1px solid #ff9800;
            color: #e65100;
        }
        
        .alert.error {
            background: #ffebee;
            border: 1px solid #f44336;
            color: #c62828;
        }
        
        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üöÄ UX Research Studio</h1>
            <p>AI Agent –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è UX —Å–∞–π—Ç–æ–≤</p>
        </div>
        
        <div class="main-content">
            <div class="card">
                <h2>üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h2>
                <form id="researchForm">
                    <div class="form-group">
                        <label for="scenario_name">–°—Ü–µ–Ω–∞—Ä–∏–π:</label>
                        <select id="scenario_name" name="scenario_name" required>
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π</option>
                            <option value="sochi_winter">–°–æ—á–∏ - –∑–∏–º–Ω–∏–π —Å–µ–∑–æ–Ω</option>
                            <option value="andorra">–ê–Ω–¥–æ—Ä—Ä–∞ - –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π –∫—É—Ä–æ—Ä—Ç</option>
                            <option value="sochi_ski_premium">–°–æ—á–∏ - –ø—Ä–µ–º–∏—É–º –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π</option>
                            <option value="andorra_luxury_ski">–ê–Ω–¥–æ—Ä—Ä–∞ - –ª—é–∫—Å –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π</option>
                            <option value="custom">–ö–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="name">–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:</label>
                        <input type="text" id="name" name="name" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–æ–∏—Å–∫ –æ—Ç–µ–ª—è –≤ –°–æ—á–∏" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="destination">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</label>
                        <input type="text" id="destination" name="destination" placeholder="–°–æ—á–∏, –ê–Ω–¥–æ—Ä—Ä–∞, –ö—Ä–∞—Å–Ω–∞—è –ü–æ–ª—è–Ω–∞" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="custom_prompt">–ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:</label>
                        <textarea id="custom_prompt" name="custom_prompt" rows="4" placeholder="–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ, —á—Ç–æ –¥–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ AI –∞–≥–µ–Ω—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–∞–π—Ç–∏ –æ—Ç–µ–ª—å –¥–ª—è –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ —Å 4+ –∑–≤–µ–∑–¥–∞–º–∏, –Ω–µ –¥–∞–ª—å—à–µ 2–∫–º –æ—Ç –ø–æ–¥—ä–µ–º–Ω–∏–∫–∞, —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Ç–º–µ–Ω–æ–π, –¥–æ 10000 —Ä—É–±/–Ω–æ—á—å"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="competitor_analysis">–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:</label>
                        <textarea id="competitor_analysis" name="competitor_analysis" rows="3" placeholder="–£–∫–∞–∂–∏—Ç–µ —Å–∞–π—Ç—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: Yandex.Travel, Booking.com) –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–ª—å–∫–æ ostrovok.ru"></textarea>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="check_in">–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞:</label>
                            <input type="date" id="check_in" name="check_in" required>
                        </div>
                        <div class="form-group">
                            <label for="check_out">–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞:</label>
                            <input type="date" id="check_out" name="check_out" required>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="guests">–ì–æ—Å—Ç–µ–π:</label>
                            <input type="number" id="guests" name="guests" min="1" max="10" value="2" required>
                        </div>
                        <div class="form-group">
                            <label for="rooms">–ö–æ–º–Ω–∞—Ç:</label>
                            <input type="number" id="rooms" name="rooms" min="1" max="5" value="1" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="stars">–ó–≤–µ–∑–¥–Ω–æ—Å—Ç—å –æ—Ç–µ–ª—è:</label>
                        <select id="stars" name="stars">
                            <option value="–õ—é–±—ã–µ">–õ—é–±—ã–µ</option>
                            <option value="3+">3+ –∑–≤–µ–∑–¥—ã</option>
                            <option value="4+">4+ –∑–≤–µ–∑–¥—ã</option>
                            <option value="5">5 –∑–≤–µ–∑–¥</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="price_limit">–õ–∏–º–∏—Ç —Ü–µ–Ω—ã –∑–∞ –Ω–æ—á—å:</label>
                        <input type="text" id="price_limit" name="price_limit" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 10000 —Ä—É–±, 150‚Ç¨, –õ—é–±–∞—è">
                    </div>
                    
                    <button type="submit" class="btn" id="startBtn">
                        üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
                    </button>
                </form>
            </div>
            
            <div class="card">
                <h2>üìä –ë—ã—Å—Ç—Ä—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏</h2>
                <div class="quick-scenarios">
                    <button class="btn" onclick="loadScenario('sochi_winter')">
                        üèÇ –°–æ—á–∏ - –∑–∏–º–Ω–∏–π —Å–µ–∑–æ–Ω
                    </button>
                    <button class="btn" onclick="loadScenario('andorra')" style="margin-top: 15px;">
                        ‚õ∑Ô∏è –ê–Ω–¥–æ—Ä—Ä–∞ - –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π
                    </button>
                    <button class="btn" onclick="loadScenario('sochi_ski_premium')" style="margin-top: 15px;">
                        üéø –°–æ—á–∏ - –ø—Ä–µ–º–∏—É–º –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π
                    </button>
                    <button class="btn" onclick="loadScenario('andorra_luxury_ski')" style="margin-top: 15px;">
                        üèîÔ∏è –ê–Ω–¥–æ—Ä—Ä–∞ - –ª—é–∫—Å –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π
                    </button>
                </div>
                
                <div style="margin-top: 30px;">
                    <h3>üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å</h3>
                    <ol style="margin-left: 20px; margin-top: 10px; line-height: 1.6;">
                        <li>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π</li>
                        <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</li>
                        <li>–î–æ–±–∞–≤—å—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π</li>
                        <li>–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</li>
                        <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</li>
                        <li>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
                        <li>–ü–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π UX –æ—Ç—á–µ—Ç</li>
                    </ol>
                </div>
            </div>
        </div>
        
        <div class="status-section hidden" id="statusSection">
            <div class="status-header">
                <h2>üìà –°—Ç–∞—Ç—É—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h2>
                <div class="status-indicator">
                    <div class="status-dot" id="statusDot"></div>
                    <span id="statusText">–û–∂–∏–¥–∞–Ω–∏–µ</span>
                </div>
            </div>
            
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            
            <div class="chat-container" id="chatContainer">
                <!-- –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
            </div>
            
            <div style="margin-top: 20px; text-align: center;">
                <button class="btn" onclick="stopResearch()" id="stopBtn" style="display: none;">
                    ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
                </button>
            </div>
        </div>
        
        <div class="results-section hidden" id="resultsSection">
            <h2>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h2>
            <div id="resultsContent">
                <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å -->
            </div>
        </div>
    </div>

    <script>
        let currentResearchId = null;
        let statusInterval = null;
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date();
            const checkIn = new Date(today.getTime() + (7 * 24 * 60 * 60 * 1000)); // +7 –¥–Ω–µ–π
            const checkOut = new Date(checkIn.getTime() + (7 * 24 * 60 * 60 * 1000)); // +14 –¥–Ω–µ–π
            
            document.getElementById('check_in').value = checkIn.toISOString().split('T')[0];
            document.getElementById('check_out').value = checkOut.toISOString().split('T')[0];
        });
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        function loadScenario(scenarioName) {
            const scenarios = {
                'sochi_winter': {
                    name: '–°–æ—á–∏ - –∑–∏–º–Ω–∏–π —Å–µ–∑–æ–Ω',
                    destination: '–°–æ—á–∏',
                    stars: '4+',
                    price_limit: '15000 —Ä—É–±'
                },
                'andorra': {
                    name: '–ê–Ω–¥–æ—Ä—Ä–∞ - –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π –∫—É—Ä–æ—Ä—Ç',
                    destination: '–ê–Ω–¥–æ—Ä—Ä–∞',
                    stars: '4+',
                    price_limit: '200‚Ç¨'
                },
                'sochi_ski_premium': {
                    name: '–°–æ—á–∏ - –ø—Ä–µ–º–∏—É–º –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π',
                    destination: '–°–æ—á–∏',
                    stars: '5',
                    price_limit: '25000 —Ä—É–±'
                },
                'andorra_luxury_ski': {
                    name: '–ê–Ω–¥–æ—Ä—Ä–∞ - –ª—é–∫—Å –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π',
                    destination: '–ê–Ω–¥–æ—Ä—Ä–∞',
                    stars: '5',
                    price_limit: '500‚Ç¨'
                }
            };
            
            const scenario = scenarios[scenarioName];
            if (scenario) {
                document.getElementById('name').value = scenario.name;
                document.getElementById('destination').value = scenario.destination;
                document.getElementById('stars').value = scenario.stars;
                document.getElementById('price_limit').value = scenario.price_limit;
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        document.getElementById('researchForm').addEventListener('submit', function(e) {
            e.preventDefault();
            startResearch();
        });
        
        // –ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        function startResearch() {
            const formData = new FormData(document.getElementById('researchForm'));
            const data = {
                scenario_name: formData.get('scenario_name'),
                name: formData.get('name'),
                destination: formData.get('destination'),
                custom_prompt: formData.get('custom_prompt'),
                competitor_analysis: formData.get('competitor_analysis'),
                check_in: formData.get('check_in'),
                check_out: formData.get('check_out'),
                guests: parseInt(formData.get('guests')),
                rooms: parseInt(formData.get('rooms')),
                stars: formData.get('stars'),
                price_limit: formData.get('price_limit')
            };
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
            document.getElementById('statusSection').classList.remove('hidden');
            document.getElementById('resultsSection').classList.add('hidden');
            document.getElementById('startBtn').disabled = true;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            updateStatus('running', '–ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è...');
            addMessage('ü§ñ AI Agent', '–ù–∞—á–∏–Ω–∞—é –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...', 'info');
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            fetch('/api/research/start', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                currentResearchId = data.research_id;
                updateStatus('running', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ');
                addMessage('‚úÖ –°–∏—Å—Ç–µ–º–∞', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!', 'info');
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞
                startStatusMonitoring();
            })
            .catch(error => {
                console.error('Error:', error);
                updateStatus('error', '–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞');
                addMessage('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: ' + error.message, 'error');
                document.getElementById('startBtn').disabled = false;
            });
        }
        
        // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        function stopResearch() {
            if (currentResearchId) {
                fetch(`/api/research/${currentResearchId}/stop`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    updateStatus('stopped', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                    addMessage('‚èπÔ∏è –°–∏—Å—Ç–µ–º–∞', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', 'warning');
                    document.getElementById('stopBtn').style.display = 'none';
                    document.getElementById('startBtn').disabled = false;
                })
                .catch(error => {
                    console.error('Error:', error);
                    addMessage('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', 'error');
                });
            }
        }
        
        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞
        function startStatusMonitoring() {
            if (statusInterval) {
                clearInterval(statusInterval);
            }
            
            statusInterval = setInterval(() => {
                if (currentResearchId) {
                    fetch(`/api/research/${currentResearchId}/status`)
                    .then(response => response.json())
                    .then(data => {
                        updateProgress(data.progress || 0);
                        updateStatus(data.status === 'running' ? 'running' : data.status === 'completed' ? 'completed' : 'error');
                        
                        if (data.messages) {
                            data.messages.forEach(msg => {
                                if (!document.querySelector(`[data-message-id="${msg.id}"]`)) {
                                    addMessage(msg.sender, msg.message, msg.type);
                                }
                            });
                        }
                        
                        if (data.status === 'completed') {
                            showResults(data.results);
                            clearInterval(statusInterval);
                            document.getElementById('stopBtn').style.display = 'none';
                            document.getElementById('startBtn').disabled = false;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                }
            }, 2000);
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        function updateStatus(status, text) {
            const statusDot = document.getElementById('statusDot');
            const statusText = document.getElementById('statusText');
            
            statusDot.className = 'status-dot ' + status;
            statusText.textContent = text;
            
            if (status === 'running') {
                document.getElementById('stopBtn').style.display = 'inline-block';
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        function updateProgress(progress) {
            document.getElementById('progressFill').style.width = progress + '%';
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        function addMessage(sender, message, type = 'info') {
            const container = document.getElementById('chatContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}`;
            messageDiv.setAttribute('data-message-id', Date.now());
            
            const timestamp = new Date().toLocaleTimeString();
            messageDiv.innerHTML = `
                <div class="message-header">
                    <strong>${sender}</strong>
                    <span>${timestamp}</span>
                </div>
                <div class="message-content">${message}</div>
            `;
            
            container.appendChild(messageDiv);
            container.scrollTop = container.scrollHeight;
        }
        
        // –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        function showResults(results) {
            document.getElementById('resultsSection').classList.remove('hidden');
            
            const content = document.getElementById('resultsContent');
            content.innerHTML = `
                <div class="alert alert-info">
                    <strong>–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!</strong> –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã UX –∞–Ω–∞–ª–∏–∑–∞.
                </div>
                
                <div class="results-grid">
                    <div class="result-card">
                        <h4>üìä –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞</h4>
                        <div class="rating">
                            <span class="star">‚òÖ</span>
                            <span class="star">‚òÖ</span>
                            <span class="star">‚òÖ</span>
                            <span class="star">‚òÖ</span>
                            <span class="star">‚òÜ</span>
                            <span>${results.overall_rating || 'N/A'}/10</span>
                        </div>
                        <p>${results.overall_feedback || '–û—Ü–µ–Ω–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞'}</p>
                    </div>
                    
                    <div class="result-card">
                        <h4>üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã</h4>
                        <p>${results.main_findings || '–í—ã–≤–æ–¥—ã –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã'}</p>
                    </div>
                    
                    <div class="result-card">
                        <h4>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã</h4>
                        <p>${results.issues || '–ü—Ä–æ–±–ª–µ–º—ã –Ω–µ –≤—ã—è–≤–ª–µ–Ω—ã'}</p>
                    </div>
                    
                    <div class="result-card">
                        <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
                        <p>${results.recommendations || '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã'}</p>
                    </div>
                </div>
                
                <div style="margin-top: 30px;">
                    <h3>üìã –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç</h3>
                    <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º, —Å–∫–∞—á–∞–π—Ç–µ JSON —Ñ–∞–π–ª:</p>
                    <button class="btn" onclick="downloadReport()">
                        üì• –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç
                    </button>
                </div>
            `;
        }
        
        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        function downloadReport() {
            if (currentResearchId) {
                window.open(`/api/research/${currentResearchId}/report`, '_blank');
            }
        }
    </script>
</body>
</html>
"""
    return html_content

@app.route('/api/scenarios')
def get_scenarios():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    scenarios = get_advanced_scenarios()
    return jsonify(scenarios)

@app.route('/api/research/start', methods=['POST'])
def start_research():
    """–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    data = request.json
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
    research_id = research_manager.start_research(data)
    
    return jsonify({
        'research_id': research_id,
        'status': 'started'
    })

@app.route('/api/research/<research_id>/status')
def get_research_status(research_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    if research_manager.research_id == research_id:
        return jsonify(research_manager.get_status())
    else:
        return jsonify({'error': 'Research not found'}), 404

@app.route('/api/research/<research_id>/stop', methods=['POST'])
def stop_research(research_id):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    if research_manager.research_id == research_id:
        research_manager.status = "stopped"
        research_manager.add_message("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "warning")
        return jsonify({'status': 'stopped'})
    else:
        return jsonify({'error': 'Research not found'}), 404

@app.route('/api/research/<research_id>/report')
def get_research_report(research_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    if research_manager.research_id == research_id and research_manager.status == "completed":
        return jsonify(research_manager.results)
    else:
        return jsonify({'error': 'Report not ready'}), 404

if __name__ == '__main__':
    # –î–ª—è Render –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è PORT
    port = int(os.environ.get('PORT', 5001))
    app.run(debug=False, host='0.0.0.0', port=port)
